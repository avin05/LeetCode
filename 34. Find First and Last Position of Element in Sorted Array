class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = new int[2];
        if(nums.length == 0){
            res[0]=-1;
            res[1]=-1;
            return res;
        }
        int first =-1,last=-1;
        
        int low = 0 ,high = nums.length-1;
        
        while(low <= high){
            int mid = low + (high-low)/2;
            
            if(nums[mid] == target){
                if(mid-1>=0 && nums[mid-1] == target){
                while(mid-1>=0 && nums[mid-1] == target){
                    
                    mid--;
                    
                }
                first = mid;
                    break;
                }
                else
                
                {first = mid;
                break;}
                
            }
            else if(nums[mid] < target){
                low = mid+1;
                
            }
            else{
                high = mid -1;
            }
            
            
        }
        
        low = 0;
        high = nums.length-1;
        
        while(low <= high){
            int mid = low + (high-low)/2;
            
            if(nums[mid] == target){
                if(mid+1<nums.length && nums[mid+1] == target){
                while(mid+1<nums.length && nums[mid+1] == target){
                    
                    mid++;
                    
                }
                last = mid;
                break;
                }
                else
                    
                
                {last = mid;
                break;}
                    
                
            }
            else if(nums[mid] < target){
                low = mid+1;
                
            }
            else{
                high = mid -1;
            }
            
            
        }
        
        res[0]=first;
        res[1]=last;
        
        return res;
        
    }
}

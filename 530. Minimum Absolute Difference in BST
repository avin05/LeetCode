/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public ArrayList<Integer> arr = new ArrayList<>();
    public int getMinimumDifference(TreeNode root) {
        minDiff(root);
        int diff =Integer.MAX_VALUE;
        if(arr.size() == 2){
            return arr.get(1)-arr.get(0);
        }
        for(int i=0;i<arr.size()-1;i++){
           int diffe = arr.get(i+1)-arr.get(i);
            if(diffe<diff){
                diff = diffe;
            }
        }
        return diff;
        
    }
    public void minDiff(TreeNode root){
        if(root == null){
            return;
        }
        
        minDiff(root.left);
        arr.add(root.val);
        minDiff(root.right);
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void pSum(TreeNode root,List<List<Integer>> res, List<Integer> ans,int sumsf,int targetSum){
      if(root == null){
          return;
      }
      if(root.left == null && root.right == null){
          if(root.val+sumsf == targetSum){
              List<Integer> temp = new ArrayList<>();
              for(int val:ans){
                  temp.add(val);
              }
              temp.add(root.val);
              res.add(temp);
          }
          return;
      }
      sumsf+=root.val;
      ans.add(root.val);
      pSum(root.left,res,ans,sumsf,targetSum);
      pSum(root.right,res,ans,sumsf,targetSum);
      sumsf-=root.val;
      ans.remove(ans.size()-1);
  }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> ans = new ArrayList<>();
        pSum(root,res,ans,0,targetSum);
        return res;
    }
}

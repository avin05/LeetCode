/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        if(head == null || head.next == null){
            return null;
        }
        ListNode prev = null;
        ListNode p1 = head,p2 = head;
        
        for(int i=0;i<n;i++){
            p1=p1.next;
        }
        
        while(p1!=null){
            p1=p1.next;
            prev = p2;
            p2 = p2.next;
        }
        if(prev!=null){
            prev.next = p2.next;
            p2.next = null;
            return head;
        }else{
            head = p2.next;
            p2.next = null;
            return head;
            
        }
        
       
        
    }
}

//BRUTE FORCE

class Solution {
    public int firstMissingPositive(int[] arr) {
    Arrays.sort(arr);
    int find = 1;
    for(int i=0;i<arr.length;i++){
        if(arr[i]>0 && arr[i]==find){
            find+=1;
        }else if(arr[i]>0 && arr[i]!=find){
            if(i>0 && arr[i] == arr[i-1]){
                continue;
            }else
                return find;
        }
    }
    return find;
    }
}
//OPTIMAL
class Solution {
    public int firstMissingPositive(int[] nums) {
        boolean one = false;
        int n = nums.length;
        
        for(int i=0;i<n;i++){
            if(nums[i]==1){
                one = true;
            }
            
            if(nums[i]<1 || nums[i]>n){
                nums[i] =1;
            }
        }
        
        if(one == false){
            return 1;
        }
        
        for(int i=0;i<n;i++){
            int val = Math.abs(nums[i]);
            nums[val-1] = -Math.abs(nums[val-1]);
        }
        
        for(int i=0;i<n;i++){
            if(nums[i]>0){
                return i+1;
            }
        }
        return n+1;
    }
}

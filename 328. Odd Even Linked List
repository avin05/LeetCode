/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        
        ListNode odd = new ListNode(-1);
        ListNode oddHead = odd;
        ListNode even = new ListNode(-1);
        ListNode evenHead = even;
        ListNode temp =head;
        int count =1;
        while(temp!=null){
            if(count%2 == 0){
                evenHead.next = temp;
                evenHead = temp;
                
            }else{
                oddHead.next = temp;
                oddHead = temp;
            }
            temp = temp.next;
            count++;
        }
        evenHead.next = null;
        oddHead.next = even.next;
        return odd.next;
        
    }
}

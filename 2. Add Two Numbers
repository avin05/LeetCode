/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
  
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
         if(l1 == null || l2 == null){
            return l1 == null?l2:l1;
        }
        ListNode ans = new ListNode(-1);
        ListNode temp = ans;
        
        int carry =0;
        ListNode temp1 =l1,temp2 = l2;
        while(carry!=0 || temp1!=null || temp2!=null){
            int val1 = temp1 == null?0:temp1.val;
            int val2 = temp2 == null?0:temp2.val;
            temp1 = temp1 == null?null:temp1.next;
            temp2 = temp2 == null?null:temp2.next;
            int sum = (carry+val1 + val2);
            carry = sum/10;
            ListNode nn = new ListNode(sum%10);
            temp.next = nn;
            temp = nn;
            
            
        }
        
        return ans.next;
        
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if(root == null){
            return new ArrayList<>();
        }
        List<List<Integer>> res = new ArrayList<>();
        Queue<TreeNode> qu = new LinkedList<>();
        qu.add(root);
        int c =1;
        while(qu.size()>0){
            int size = qu.size();
            LinkedList<Integer> ans = new LinkedList<>();
            for(int i=0;i<size;i++){
                TreeNode rem = qu.remove();
                
                if(c%2==0){
                    ans.addFirst(rem.val);
               

                }else{
                    ans.add(rem.val);
                }  
                if(rem.left!=null){
                    qu.add(rem.left);
                }
                if(rem.right!=null){
                    qu.add(rem.right);
                    
                }
                
                
                
                }
            c++;
            
            res.add(ans);
        }
        return res;
        
    }
}

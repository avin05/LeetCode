/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void path(TreeNode root,List<String> res, String asf){
        
        if(root == null){
            return;
        }
        
        if(root.left == null && root.right == null){
            asf+=root.val;
            res.add(asf);
            asf = "";
            return;
        }
        
        asf+=root.val+"->";
        
        path(root.left,res,asf);
        path(root.right,res,asf);
    }
    public List<String> binaryTreePaths(TreeNode root) {
        
        List<String> res = new ArrayList<>();
        path(root,res,"");
        return res;
        
    }
}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode findMid(ListNode head){
        ListNode t = head, h = head;
        
        while(h!=null && h.next!=null){
            h=h.next.next;
            t=t.next;
        }
        return t;
    }
    public ListNode reverse(ListNode head){
        ListNode cur =head;
        ListNode prev = null,next =null;
        
        while(cur!=null){
            next =cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        
        return prev;
        
    }
    public boolean isPalindrome(ListNode head) {
        if(head.next == null){
            return true;
        }
        
        ListNode mid = findMid(head);
        ListNode start = reverse(mid);
        
        ListNode temp = head;
        
        while(temp!=null && start!=null){
            if(temp.val != start.val)
                return false;
            
            temp=temp.next;
            start= start.next;
        }
        
        return true;
        
    }
}

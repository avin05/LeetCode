/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean isFound = false;
    int target;
    public boolean hasPathSum(TreeNode root, int targetSum) {
        target = targetSum;
        util(root,0);
        return isFound;
    }
    
    public void util(TreeNode root, int currSum){
        if(root == null || isFound){
            return;
        }
        currSum += root.val;
        if(root.left == null && root.right == null && currSum == target){
            isFound = true;
        }
        util(root.left, currSum);
        util(root.right, currSum);
        currSum -= root.val;
    }
}
